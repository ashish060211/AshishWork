package com.ash.java.geekforgeek.code;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

/**
 * Problem link:- https://practice.geeksforgeeks.org/problems/subarray-with-given-sum/0
 *
 *  
 */
public class FindSubArraySumProblem {

	public static void main(String[] args) {
		 Scanner sc = new Scanner(System.in);
		 int tcNum = sc.nextInt();
		 
		 List<ArrayInfo> inputList = new ArrayList<>();
		 for(int i=0;i<tcNum;i++) {
			 ArrayInfo arrayInfo = getArrayInfo(sc); 
			 System.out.println(arrayInfo);
			 inputList.add(arrayInfo);
		 }
		 sc.close();
		 
		 
	}

	static int[] convertStringIntoArray(Scanner numArrScanner, int size) {
		int[] arr = new int[size];
		for(int i =0;i<size;i++) {
		if(numArrScanner.hasNextInt()) {
			arr[i] = numArrScanner.nextInt();
		}
		}
		return arr;
	}
	
	static ArrayInfo getArrayInfo(Scanner sc) {
		sc.nextLine(); 
		Scanner numScanner = new Scanner(sc.nextLine());
		int size = numScanner.nextInt();
		int sum = numScanner.nextInt();
		numScanner.close();
		Scanner numArrScanner = new Scanner(sc.nextLine());
		int[] array = convertStringIntoArray(numArrScanner, size);
		numArrScanner.close();
		return new ArrayInfo(size, sum, array);
	}
	
	static class ArrayInfo {
		int size;
		int sum;
		int[] array;
		public ArrayInfo(int size, int sum, int[] array) {
			super();
			this.size = size;
			this.sum = sum;
			this.array = array;
		}
		public int getSize() {
			return size;
		}
		public int getSum() {
			return sum;
		}
		public int[] getArray() {
			return array;
		}
		@Override
		public String toString() {
			return "ArrayInfo [size=" + size + ", sum=" + sum + ", array=" + Arrays.toString(array) + "]";
		}
	}
	
	static class Result {
		int start;
		int end;
		ArrayInfo testCase;
		public int getStart() {
			return start;
		}
		public int getEnd() {
			return end;
		}
		public ArrayInfo getTestCase() {
			return testCase;
		}
		public Result(int start, int end, ArrayInfo testCase) {
			super();
			this.start = start;
			this.end = end;
			this.testCase = testCase;
		}
		@Override
		public String toString() {
			return "Result [start=" + start + ", end=" + end + ", testCase=" + testCase + "]";
		}
	}

	static Result getResult(ArrayInfo info) {
		
		List<Integer> subList = new ArrayList<>();
		int tempSum=0;
		boolean resetFlag = false;
		for(int i=0;i<info.getSize();i++) {
			subList.add(info.getArray()[i]);
			tempSum += info.getArray()[i];
			if(tempSum<info.getSum()) {
				
			} else {
				resetFlag=true;
			}
			if(resetFlag) {
				if(tempSum==info.getSum()) {
					break;
				}
				tempSum=0;
				subList=null;
				subList = new ArrayList<>();
			}
		}
		
		return null;
	}
}
