package com.ash.java.geekforgeek.code;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

/**
 * Problem link:- https://practice.geeksforgeeks.org/problems/subarray-with-given-sum/0
 *
 *  
 */
public class FindSubArraySumProblem {

	public static void main(String[] args) {
		 Scanner sc = new Scanner(System.in);
		 int tcNum = sc.nextInt();
		 
		 List<ArrayInfo> inputList = new ArrayList<>();
		 for(int i=0;i<tcNum;i++) {
			 ArrayInfo arrayInfo = getArrayInfo(sc); 
			 inputList.add(arrayInfo);
		 }
		 sc.close();
		 
		 Result rs = getResult(inputList.get(0));
		 System.out.println(rs);
	}

	static int[] convertStringIntoArray(Scanner numArrScanner, int size) {
		int[] arr = new int[size];
		for(int i =0;i<size;i++) {
		if(numArrScanner.hasNextInt()) {
			arr[i] = numArrScanner.nextInt();
		}
		}
		return arr;
	}
	
	static ArrayInfo getArrayInfo(Scanner sc) {
		sc.nextLine(); 
		Scanner numScanner = new Scanner(sc.nextLine());
		int size = numScanner.nextInt();
		int sum = numScanner.nextInt();
		numScanner.close();
		Scanner numArrScanner = new Scanner(sc.nextLine());
		int[] array = convertStringIntoArray(numArrScanner, size);
		numArrScanner.close();
		return new ArrayInfo(size, sum, array);
	}
	
	static class ArrayInfo {
		int size;
		int sum;
		int[] array;
		public ArrayInfo(int size, int sum, int[] array) {
			super();
			this.size = size;
			this.sum = sum;
			this.array = array;
		}
		public int getSize() {
			return size;
		}
		public int getSum() {
			return sum;
		}
		public int[] getArray() {
			return array;
		}
		@Override
		public String toString() {
			return "ArrayInfo [size=" + size + ", sum=" + sum + ", array=" + Arrays.toString(array) + "]";
		}
	}
	
	static class Result {
		int start;
		int end;
		ArrayInfo testCase;
		public int getStart() {
			return start;
		}
		public int getEnd() {
			return end;
		}
		public ArrayInfo getTestCase() {
			return testCase;
		}
		public void setStart(int start) {
			this.start = start;
		}
		public void setEnd(int end) {
			this.end = end;
		}
		public void setTestCase(ArrayInfo testCase) {
			this.testCase = testCase;
		}
		public Result() {
			
		}
		
		public void reset() {
			this.end=0;
			this.start=0;
		}
		@Override
		public String toString() {
			return "Result [start=" + start + ", end=" + end + ", testCase=" + testCase + "]";
		}
	}

	static Result getResult(ArrayInfo info) {
		Result rs = new Result();
		int tempSum=0;
		boolean status = true;
		for(int i=0;i<info.getSize();i++) {
			if(status) {
				rs.setStart(i);
				status=false;
			}
			tempSum +=info.getArray()[i];
			if(tempSum==info.getSum()) {
				rs.setEnd(i+1);
				break;
			} else if(tempSum>info.getSum()) {
				i=rs.getStart();
				status = true;
				tempSum=0;
				rs.reset();
			}
		}
		rs.setTestCase(info);
		return rs;
	}
}
